name: CI

on:
  pull_request:
    branches: ['**']
  push:
    branches: ['**']
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'

      - name: Extract pnpm version from package.json
        id: get-pnpm-version
        run: echo "PNPM_VERSION=$(jq -r '.packageManager' package.json | sed -E 's/pnpm@([0-9.]+)/\1/')" >> $GITHUB_ENV

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Check pnpm version
        run: pnpm --version

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build

      - name: Type Check
        run: pnpm tsc --noEmit --project tsconfig.test.json

      - name: Lint
        run: pnpm lint

      - name: Run tests
        run: pnpm test:run

      - name: Run tests with coverage
        run: pnpm test:coverage

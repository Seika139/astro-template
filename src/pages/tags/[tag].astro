---
import MainLayout from '../../layouts/MainLayout.astro';
import BlogCard from '../../components/BlogCard.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const allPosts = await getCollection('blog');

  // 全記事から一意のタグを収集
  const uniqueTags = [...new Set(allPosts.map((post) => post.data.tags).flat())];

  // 各タグに対するパスを生成
  return uniqueTags.map((tag) => {
    // そのタグを含む記事をフィルタリング
    const filteredPosts = allPosts.filter(
      (post) =>
        post.data.tags && post.data.tags.map((t) => t.toLowerCase()).includes(tag.toLowerCase())
    );

    return {
      params: { tag: tag.toLowerCase() },
      props: { posts: filteredPosts, tag },
    };
  });
}

const { posts, tag: displayTag } = Astro.props;

// 日付順に並べ替え
const sortedPosts = posts.sort(
  (a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
);
---

<MainLayout
  title={`${displayTag} に関する記事 | ブログサイト`}
  description={`${displayTag} タグが付いたすべての記事`}
>
  <section class="tag-page">
    <div class="container">
      <h1>タグ: {displayTag}</h1>

      <div class="posts-container">
        {
          sortedPosts.length > 0 ? (
            sortedPosts.map((post) => (
              <BlogCard
                title={post.data.title}
                url={`${import.meta.env.BASE_URL}blog/${post.slug}`}
                description={post.data.description}
                date={post.data.pubDate}
                tags={post.data.tags}
              />
            ))
          ) : (
            <p class="no-posts">このタグの記事はまだありません。</p>
          )
        }
      </div>

      <div class="back-to-blog">
        <a href={`${import.meta.env.BASE_URL}blog`} class="back-link">&larr; ブログ一覧に戻る</a>
      </div>
    </div>
  </section>
</MainLayout>

<style>
  .tag-page {
    margin: 2rem 0 4rem;
  }

  .container {
    max-width: 900px;
    margin: 0 auto;
    padding: 0 1.5rem;
  }

  h1 {
    font-size: 2rem;
    margin-bottom: 2rem;
    border-bottom: 2px solid #eee;
    padding-bottom: 1rem;
  }

  .posts-container {
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }

  .no-posts {
    text-align: center;
    padding: 3rem;
    background-color: #f9f9f9;
    border-radius: 8px;
    font-size: 1.2rem;
    color: #666;
  }

  .back-to-blog {
    margin-top: 3rem;
    text-align: center;
  }

  .back-link {
    font-weight: 500;
    font-size: 1.1rem;
  }
</style>

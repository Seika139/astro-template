---
interface Feature {
  title: string;
  description: string;
  icon?: string;
}

interface Props {
  features: Feature[];
  title: string;
  subtitle?: string;
}

const { features, title, subtitle } = Astro.props;
---

<section class="features">
  <div class="features-header">
    <h2>{title}</h2>
    {subtitle && <p>{subtitle}</p>}
  </div>

  <div class="features-grid">
    {
      features.map((feature) => (
        <div class="feature-card">
          {feature.icon && <div class="feature-icon">{feature.icon}</div>}
          <h3>{feature.title}</h3>
          <p>{feature.description}</p>
        </div>
      ))
    }
  </div>
</section>

<style>
  .features {
    padding: 4rem 0;
  }

  .features-header {
    text-align: center;
    margin-bottom: 3rem;
  }

  .features-header h2 {
    font-size: 2.2rem;
    margin-bottom: 1rem;
    color: #333;
  }

  .features-header p {
    max-width: 700px;
    margin: 0 auto;
    color: #666;
    font-size: 1.1rem;
  }

  .features-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
  }

  .feature-card {
    padding: 2rem;
    border-radius: 8px;
    background-color: white;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition:
      transform 0.2s,
      box-shadow 0.2s;
  }

  .feature-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
  }

  .feature-icon {
    font-size: 2.5rem;
    margin-bottom: 1rem;
    color: #0077cc;
  }

  .feature-card h3 {
    font-size: 1.5rem;
    margin-bottom: 1rem;
    color: #333;
  }

  .feature-card p {
    color: #666;
    line-height: 1.6;
  }
</style>

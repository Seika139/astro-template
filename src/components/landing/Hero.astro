---
interface Props {
  title: string;
  subtitle: string;
  ctaText: string;
  ctaUrl: string;
  backgroundImage?: string;
}

const {
  title,
  subtitle,
  ctaText,
  ctaUrl,
  backgroundImage = '/images/hero-background.jpg',
} = Astro.props;
---

<div
  class="hero"
  style={`background-image: url(${backgroundImage.startsWith('/') ? `${import.meta.env.BASE_URL}${backgroundImage.slice(1)}` : backgroundImage});`}
>
  <div class="hero-overlay"></div>
  <div class="hero-content">
    <h1>{title}</h1>
    <p>{subtitle}</p>
    <a
      href={ctaUrl.startsWith('/') ? `${import.meta.env.BASE_URL}${ctaUrl.slice(1)}` : ctaUrl}
      class="cta-button">{ctaText}</a
    >
  </div>
</div>

<style>
  .hero {
    position: relative;
    height: 80vh;
    min-height: 500px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    text-align: center;
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
  }

  .hero-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
  }

  .hero-content {
    position: relative;
    max-width: 800px;
    padding: 2rem;
  }

  .hero-content h1 {
    font-size: 3rem;
    margin-bottom: 1rem;
    line-height: 1.2;
  }

  .hero-content p {
    font-size: 1.5rem;
    margin-bottom: 2rem;
    line-height: 1.6;
  }

  .cta-button {
    display: inline-block;
    background-color: #0077cc;
    color: white;
    padding: 0.8rem 2rem;
    border-radius: 4px;
    font-size: 1.2rem;
    font-weight: 600;
    text-decoration: none;
    transition: background-color 0.2s;
  }

  .cta-button:hover {
    background-color: #005fa3;
  }

  @media (max-width: 768px) {
    .hero-content h1 {
      font-size: 2rem;
    }

    .hero-content p {
      font-size: 1.2rem;
    }
  }
</style>

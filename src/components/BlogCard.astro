---
interface Props {
  title: string;
  url: string;
  description: string;
  date: Date | string;
  tags?: string[];
}

import { formatDate } from '../utils';

const { title, url, description, date, tags = [] } = Astro.props;
---

<div class="blog-card">
  <h3 class="title">
    <a href={url.startsWith('/') ? `${import.meta.env.BASE_URL}${url.slice(1)}` : url}>{title}</a>
  </h3>
  <div class="metadata">
    <time datetime={date.toString()}>{formatDate(date)}</time>
    {
      tags.length > 0 && (
        <div class="tags">
          {tags.map((tag) => (
            <a href={`${import.meta.env.BASE_URL}tags/${tag.toLowerCase()}`} class="tag">
              {tag}
            </a>
          ))}
        </div>
      )
    }
  </div>
  <p class="description">{description}</p>
  <a
    href={url.startsWith('/') ? `${import.meta.env.BASE_URL}${url.slice(1)}` : url}
    class="read-more">続きを読む &rarr;</a
  >
</div>

<style>
  .blog-card {
    padding: 1.5rem;
    border: 1px solid #eee;
    border-radius: 8px;
    margin-bottom: 2rem;
    transition:
      transform 0.2s,
      box-shadow 0.2s;
  }

  .blog-card:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
  }

  .title {
    margin: 0 0 0.5rem 0;
    font-size: 1.5rem;
  }

  .title a {
    color: inherit;
    text-decoration: none;
  }

  .title a:hover {
    color: #0077cc;
  }

  .metadata {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    margin-bottom: 1rem;
    font-size: 0.9rem;
    color: #666;
    align-items: center;
  }

  .tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .tag {
    background-color: #f1f1f1;
    padding: 0.2rem 0.6rem;
    border-radius: 2rem;
    font-size: 0.8rem;
    color: #333;
    text-decoration: none;
  }

  .tag:hover {
    background-color: #e0e0e0;
    text-decoration: none;
  }

  .description {
    margin-bottom: 1rem;
    color: #444;
  }

  .read-more {
    font-weight: 500;
    display: inline-block;
  }
</style>
